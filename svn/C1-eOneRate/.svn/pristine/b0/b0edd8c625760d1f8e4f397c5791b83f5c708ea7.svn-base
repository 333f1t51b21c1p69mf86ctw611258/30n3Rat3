package e1reformat.entity.cdr.sub;

import java.util.ArrayList;
import java.util.List;

import e1reformat.util.IConstant;

public class Balance {

    private static final String SUB_FIELD_DELIMITER = "\\*";
    public static final int FULL_BALANCE_FIELDS = 8;
    public static final int SIX_BALANCE_FIELDS = 6;
    private String BALANCE_ID;
    private String BALANCE_NAME;
    private String BALANCE;
    private String BALANCE_CHANGE;
    private String BALANCE_UNIT_TYPE;
    private String BALANCE_SIGN;
    private String BALANCE_TYPE;
    private String BALANCE_TARGET_ID;

    public String getBALANCE_ID() {
        return BALANCE_ID;
    }

    public void setBALANCE_ID(String bALANCE_ID) {
        BALANCE_ID = bALANCE_ID;
    }

    public String getBALANCE_NAME() {
        return BALANCE_NAME;
    }

    public void setBALANCE_NAME(String bALANCE_NAME) {
        BALANCE_NAME = bALANCE_NAME;
    }

    public String getBALANCE() {
        return BALANCE;
    }

    public void setBALANCE(String bALANCE) {
        BALANCE = bALANCE;
    }

    public String getBALANCE_CHANGE() {
        return BALANCE_CHANGE;
    }

    public void setBALANCE_CHANGE(String bALANCE_CHANGE) {
        BALANCE_CHANGE = bALANCE_CHANGE;
    }

    public String getBALANCE_UNIT_TYPE() {
        return BALANCE_UNIT_TYPE;
    }

    public void setBALANCE_UNIT_TYPE(String bALANCE_UNIT_TYPE) {
        BALANCE_UNIT_TYPE = bALANCE_UNIT_TYPE;
    }

    public String getBALANCE_SIGN() {
        return BALANCE_SIGN;
    }

    public void setBALANCE_SIGN(String bALANCE_SIGN) {
        BALANCE_SIGN = bALANCE_SIGN;
    }

    public String getBALANCE_TYPE() {
        return BALANCE_TYPE;
    }

    public void setBALANCE_TYPE(String bALANCE_TYPE) {
        BALANCE_TYPE = bALANCE_TYPE;
    }

    public String getBALANCE_TARGET_ID() {
        return BALANCE_TARGET_ID;
    }

    public void setBALANCE_TARGET_ID(String bALANCE_TARGET_ID) {
        BALANCE_TARGET_ID = bALANCE_TARGET_ID;
    }

    /**
     * TODO to Balance
     *
     * @param
     * @return listBalance of OCS
     *
     * @Author
     * @Date 05 Nov 2013
     */
    public Balance(List<String> listValue, int fileType) {
        if (((fileType == IConstant.RECORD_TYPE.OCS))
                || ((fileType == IConstant.RECORD_TYPE.VOICE))
                || ((fileType == IConstant.RECORD_TYPE.PMT))
                || ((fileType == IConstant.RECORD_TYPE.SMS))
                || ((fileType == IConstant.RECORD_TYPE.GPRS))
                ) {
            if (listValue.size() == FULL_BALANCE_FIELDS) {
                this.BALANCE_ID = listValue.get(0);
                this.BALANCE_NAME = listValue.get(1);
                this.BALANCE = listValue.get(2);
                this.BALANCE_CHANGE = listValue.get(3);
                this.BALANCE_UNIT_TYPE = listValue.get(4);
                this.BALANCE_SIGN = listValue.get(5);
                this.BALANCE_TARGET_ID = listValue.get(6);
                this.BALANCE_TYPE = listValue.get(7);
            }
        }

        if (fileType == IConstant.RECORD_TYPE.OSA) {
            if (listValue.size() == SIX_BALANCE_FIELDS) {
                this.BALANCE_ID = listValue.get(0);
                this.BALANCE_NAME = listValue.get(1);
                this.BALANCE = listValue.get(2);
                this.BALANCE_CHANGE = listValue.get(3);
                this.BALANCE_UNIT_TYPE = listValue.get(4);
                this.BALANCE_SIGN = listValue.get(5);

            }
        }

    }

    public static ArrayList<Balance> getlistBalance(int fileType, int numberOfBalance, String balanceInfo) {

        ArrayList<Balance> listBalance = new ArrayList<Balance>();
        if (((fileType == IConstant.RECORD_TYPE.OCS))
                || ((fileType == IConstant.RECORD_TYPE.VOICE))
                || ((fileType == IConstant.RECORD_TYPE.PMT))
                || ((fileType == IConstant.RECORD_TYPE.SMS))
                || ((fileType == IConstant.RECORD_TYPE.GPRS))
                ) {
            String[] balanceInfoArray = balanceInfo.split(SUB_FIELD_DELIMITER);
            int countIndex = FULL_BALANCE_FIELDS;
            int numberOfBalances = 0;

            while (true) {
                List<String> b = new ArrayList<String>();
                for (int j = 0; j < countIndex; j++) {
                    b.add(balanceInfoArray[numberOfBalances * 8 + j]);
                }

                Balance newBalance = new Balance(b, fileType);
                listBalance.add(newBalance);
                numberOfBalances++;

                if (numberOfBalances * FULL_BALANCE_FIELDS >= balanceInfoArray.length) {
                    break;
                }
            }

        }

        if (fileType == IConstant.RECORD_TYPE.OSA) {
            String[] balanceInfoArray = balanceInfo.split(SUB_FIELD_DELIMITER);
            int countIndex = SIX_BALANCE_FIELDS;
            int numberOfBalances = 0;

            while (true) {
                List<String> a1 = new ArrayList<String>();
                for (int j = 0; j < countIndex; j++) {
                    a1.add(balanceInfoArray[numberOfBalances * 6 + j]);
                }

                Balance newBalance = new Balance(a1, fileType);
                listBalance.add(newBalance);
                numberOfBalances++;

                if (numberOfBalances * SIX_BALANCE_FIELDS >= balanceInfoArray.length);
                break;
            }
        }
        return listBalance;
    }
}
