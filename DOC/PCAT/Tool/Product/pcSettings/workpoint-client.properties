#   WorkPoint Client Configuration Variables
#         WorkPoint version 3.4
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# This file, which conforms to the java.util.Properties file
# definition, configures your WorkPoint Client application with
# instance specific data values.

# The following keywords change the values of the fonts
# used by this application. Multiple types of fields are affected by
# each unique font category listed below.
#
# They are commented out when shipped, uncomment them by removing the # character
# from the beginning of the line in order to change the system fonts.
#
# The FontName fields may contain the value of any font installed on your system.
# The FontStyle fields must contain either PLAIN, BOLD or ITALIC
# The FontSize fields contain the desired font size. Keep in mind that
# values larger than 10 in some fonts may cause the layout of certain screens
# to look bad.
#
# The following are the current system defaults fonts for Windows:
#     defaultLabelFont = new Font("Dialog",Font.PLAIN,10);
#     defaultTextPaneFont = new Font("Serif",Font.PLAIN,10);
#     defaultTextFieldFont = new Font("SansSerif",Font.PLAIN,10);
#     defaultTextAreaFont = new Font("MonoSpaced",Font.PLAIN,10);
#     defaultInternalFrameTitleFont = new Font("Dialog",Font.BOLD,10);

#LabelFontName                   = Dialog
#LabelFontStyle                  = PLAIN
#LabelFontSize                   = 10

#TextPaneFontName                = Serif
#TextPaneFontStyle               = PLAIN
#TextPaneFontSize                = 10

#TextFieldFontName               = SansSerif
#TextFieldFontStyle              = PLAIN
#TextFieldFontSize               = 10

#TextAreaFontName                = MonoSpaced
#TextAreaFontStyle               = PLAIN
#TextAreaFontSize                = 10

#InternalFrameTitleFontName      = Dialog
#InternalFrameTitleFontStyle     = BOLD
#InternalFrameTitleFontSize      = 10

# Look And Feel
# The following are valid settings
#     System - This will use the system's default L&F
#     Metal - This is the default Swing L&F
#     Windows - This will use the Microsoft L&F
#     Motif - This will use the CDE L&F
#	  Office2003 - This will use the Office 2003 L&F
#	  VisualStudio - This will use the Visual Studio .NET IDE L&F
#	  Eclipse - This will use the Eclipse IDE L&F
#	  Xerto - This will use the Xerto L&F
#
# To use your own custom Look & Feel class, specify the classname directly, for example,
# LookAndFeel = com.mydomain.myLookandFeelClass

LookAndFeel = Office2003

# This setting is only used if Office2003 is used for the LookAndFeel.
# The following are valid settings
#		NormalColor
#		Default
#		Gray
# 		HomeStead
#		Metallic

LookAndFeelTheme = Default

# The icon size in pixels for the toolbar. Valid values are 24 or 16. Any other
# values will cause the images to not load properly for the toolbar.

ToolbarIconSize = 24

# SQL Query Limit
# Sets the maximum number of Jobs and Work Items that will be returned
# from the server in one query.

SQLQueryLimit = 100

# The maximum number of times that the Java client API will automatically retry a
# server call which previously failed with a SQL deadlock. If more than this number
# of deadlocks is encountered, the error will be sent up to the caller.
# Note that this only applies to certain commands, most notably API commands
# which involve a WorkPoint Job evaluate.

MaxDeadlockRetries = 0

# This property is only used if the server requires encrypted passwords for login.
# It defines whether or not the client should programmatically add the Sun JCE
# Provider. The Sun JCE provider contains the algorithms to encrypt and
# decrypt the password used when logging in to WorkPoint. The Sun JCE Provider
# should normally be specified in the java.security configuration file under
# JAVA_HOME. However, in cases where this is not possible, you can set this
# parameter to true and the Sun JCE Provider will be added programmatically.
# This parameter should only be set to true if the Sun JCE provider can not
# be specified in the java.security configuration file.
client.AddSunProvider = false

#############################################################################
# MTS or EJB configuration

# Determines if the designer will connect to the EJB or MTS server,
# or use XML to communicate with a web service (good for firewalls)
#client.connect = EJB
#client.connect = MTS
client.connect = XML

# Uncomment 'client.connect.URL' below whenever 'client.connect = XML' is uncommented.
# The 'localhost' value may be changed if the Application Server is on a different machine.
# The port number here must match the servlet port configured in your Application Server.
# By default, the servlet port for JBoss = 8080, WebSphere = 9080, Weblogic = 7001 and OC4J = 8888
#client.connect.URL = http://localhost:8080/wp/wpClientServlet

#
# To connect to Workflow-core running on UPM
#

#Kishore
client.connect.URL = http://10.149.3.16:8800/wp/wpClientServlet


#############################################################################
# J2EE Client Configuration

# ************************************
# ******* JBOSS SETTINGS *************
# ************************************
# These properties should be uncommented when using the JBoss EJB server.
# The default Provider URL is local machine - change from localhost
# to access an EJB server on a remote machine
#
#
# To connect to Workflow-core running on UPM
#

java.naming.factory.initial=org.jnp.interfaces.NamingContextFactory
java.naming.factory.url.pkgs=org.jboss.naming
# ******* END SETTINGS ***************


# ************************************
# ******* BEA WEBLOGIC SETTINGS ******
# ************************************
# These properties should be uncommented when using the BEA WebLogic server.
# The default Provider URL is local machine - change from localhost
# to access an EJB server on a remote machine
#
# java.naming.factory.initial=weblogic.jndi.WLInitialContextFactory
# java.naming.provider.url=t3://localhost:7001
# java.naming.security.principal=workpoint
# java.naming.security.credentials=workpoint
# ******* END SETTINGS ***************


# ************************************
# ******* IBM WEBSPHERE SETTINGS ***
# ************************************
# These properties should be uncommented when using IBM WebSphere 5.
# The default Provider URL is the local machine - change from localhost
# to access an EJB server on a remote machine
#
# java.naming.factory.initial=com.ibm.websphere.naming.WsnInitialContextFactory
# java.naming.provider.url=iiop://localhost:2809
# ******* END SETTINGS ***************


############################################################################
# Logging
############################################################################

# designer.log4j settings used for Designer only
# designer.log4j.appender.list much match appenders defined below.
designer.log4j.appender.list=WCSysOut, WCFile1
designer.log4j.root.level=WARN

# Determines the output file (or files) for logging information.
# log4j.rootCategory=[FATAL|ERROR|WARN|INFO|DEBUG], appenderName, appenderName, ...
# log4j.category.com.workpoint.client.ClientContext=INFO
# log4j.category.com.workpoint.client.connect.ClientContextEJB=INFO
log4j.category.com.workpoint=WARN

# Enable logging for particular packages and/or classes by default these will get added to the
# appenders at the root level.


# WCSysOut is set to be a ConsoleAppender which outputs to System.out.
#
log4j.appender.WCSysOut=org.apache.log4j.ConsoleAppender
log4j.appender.WCSysOut.Target=System.out

log4j.appender.WCSysOut.layout=org.apache.log4j.PatternLayout
log4j.appender.WCSysOut.layout.ConversionPattern=%d [%t] %-5p %c %x - %m%n

# WCFile1 is set to be a RollingFileAppender which outputs to Workpoint.log
# It will save the last 5 files and create a new file after the file size
# hits 1 MB.
#
log4j.appender.WCFile1=org.apache.log4j.RollingFileAppender
log4j.appender.WCFile1.File=Designer.log
log4j.appender.WCFile1.MaxFileSize=1MB
log4j.appender.WCFile1.MaxBackupIndex=5

log4j.appender.WCFile1.layout=org.apache.log4j.PatternLayout
log4j.appender.WCFile1.layout.ConversionPattern=%d [%t] %-5p %c %x - %m%n 
